openapi: 3.0.3
info:
  version: 1.0.0
  title: Test-BuddyKu
  description: The Application for Article's Creator
  contact:
    name: Faizal Ramadhan Sundara
    email: faizalramadhansundara@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/faizalsundara/Test-BuddyKu/1.0.0
  
tags:
  - name: Auth
    description: Authentication
  - name: Users
    description: User data management
  - name: Articles
    description: Article data management
  - name: Points
    description: Point data management
  - name: Company
    description: Company data management
 
paths:
  /login:
    post:
      tags:
        - Auth
      description: Login user bisa digunakan ketika user sudah registrasi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLogin'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  email: "andrigunawan@gmail.com",
                  password: "andri12"
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUserSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                      "data": {
                          "full_name": "andri gunawan",
                          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2NTg1MDM2MjQsInVzZXJJZCI6N30.DFxWe18OoFhRAIt41dIDWPQPORI8S5rAkTylJiolnbc"
                      },
                      "message": "login success",
                      "status": "success"
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "email or password incorrect"
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "failed to bind data, check your input"
                  }
  /company/login:
    post:
      tags:
        - Auth
      description: Login bisa digunakan ketika employee sudah registrasi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLogin'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  email: "employee1@gmail.com",
                  password: "loginemployee"
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUserSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                      "data": {
                          "employee_name": "andri gunawan",
                          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2NTg1MDM2MjQsInVzZXJJZCI6N30.DFxWe18OoFhRAIt41dIDWPQPORI8S5rAkTylJiolnbc"
                      },
                      "message": "login success",
                      "status": "success"
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "email or password incorrect"
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "failed to bind data, check your input"
                  }
  /users:
    post:
      tags:
        - Users
      description: Saat registrasi user harus input semua field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestRegistrasi'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "full_name": "andri gunawan",
                  "user_name": "andri12",
                  "email": "andrigunawan@gmail.com",
                  "password": "andri12",
                  "phone_number": "08123247689",
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                      "message": "Succes to insert data",
                      "status": "success"
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "fullname must be filled",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "username must without space",
                  }
                responseData3:
                  description: response failed 3
                  value: {
                    status: "error",
                    message: "invalid format email",
                  }
                responseData4:
                  description: response failed 4
                  value: {
                    status: "error",
                    message: "password must be filled",
                  }
                responseData5:
                  description: response failed 5
                  value: {
                    status: "error",
                    message: "phone number must be in numeric",
                  }
                responseData6:
                  description: response failed 6
                  value: {
                    status: "error",
                    message: "email already exist",
                  }
                responseData7:
                  description: response failed 6
                  value: {
                    status: "error",
                    message: "failed to bind data, check your input",
                  }
    get:
      tags:
        - "Company"
      description: Bisa diaplikasikan ketika user ingin melihat profilnya
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUserSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                     "data": {
                        "id": 1,
                        "full_name": "saka 1",
                        "user_name": "saka satu",
                        "email": "saka1@gmail.com",
                        "phone_number": "082123",
                        "created_at": "2022-10-18T06:42:06.332Z"
                    },
                    "message": "success to get data user",
                    "status": "success"
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "invalid token",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "unauthorized ",
                  }
        '401':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "unauthorized",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "invalid or expired jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get data user",
                  }
  /articles:
    post:
      tags:
        - Articles
      description: User bisa memposting artikel
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestArticle'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "title": "Ini Judul Artikel",
                  "content": "Ini Konten Artikel ..........",
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseArticleSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "data": {
                        "id_article": 1
                    },
                    "message": "success to insert data",
                    "status": "success"
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    "message": "invalid token",
                  }
                responseData2:
                  description: response failed 3
                  value: {
                    status: "error",
                    message: "failed to insert bind data",
                  }
        '401':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    "message": "unauthorized",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "invalid or expired jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    "message": "failed to insert data",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "failed to insert/record data",
                  }
    get:
      tags:
        - "Articles"
      description: Menampilkan semua artikel yang ada
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
            example: 1
          description: limit
        - in: query
          name: offset
          required: false
          schema:
            type: number
            example: 1
          description: offset
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseArticleSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                      "data": {
                          "data": [
                              {
                                  "id": 5,
                                  "title": "Rumah Strategis",
                                  "content": "",
                                  "created_at": "2022-07-21T07:35:13.303Z",
                                  "user": {
                                      "id": 1,
                                      "full_name": "Vera Soniya",
                                      "user_name": "Veras",
                                      "email": "vera@gmail.com",
                                      "phone_number": "08123247689",
                                  }
                              },
                              {
                                   "id": 6,
                                  "title": "Rumah Strategis",
                                  "content": "",
                                  "created_at": "2022-07-21T07:40:55.416Z",
                                  "user": {
                                      "id": 4,
                                      "full_name": "tyas",
                                      "user_name": "tyas.aja",
                                      "email": "tyas@gmail.com",
                                      "phone_number": "087678",
                                  },
                              }
                          ],
                          "total_page": 9
                      },
                      "message": "success to get all data",
                      "status": "success"
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get all data",
                  }
  /articles/{idArticle}:
    get:
      tags:
        - "Articles"
      description: Bisa diaplikasikan ketika user ingin membaca artikel berdasarkan id artikel
      parameters:
        - in: path
          name: idArticle
          required: true
          schema:
            type: number
            example: 1
          description: article_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseArticleSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                      "data": {
                          "data": {
                              "id": 45,
                              "title": "judul artikel",
                              "content": "Konten artikel .............",
                              "created_at": "2022-07-22T01:43:41.031Z",
                              "user": {
                                  "id": 1,
                                  "full_name": "Vera Soniya",
                                  "user_name": "Veras",
                                  "email": "vera@gmail.com",
                                  "phone_number": "08123247689",
                              },
                          },
                      },
                      "message": "success to get data article",
                      "status": "success"
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get data article",
                  }

  /points/{idArticle}:
    get:
      tags:
        - Points
      description: Ketika user dan employee ingin melihat point per artikel berdasarkan id artikel
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: idArticle
          required: true
          schema:
            type: number
            example: 1
          description: article_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responsePoint'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get data point article",
                    data : {
                        "id": 1,
                        "value": "2.0",
                        "created_at": "2022-10-18T15:48:29.465Z",
                        "article": {
                            "id": 2,
                            "title": "testing"
                        },
                        "company": {
                            "id": 2,
                            "employee_name": "employee 1"
                        },
                        "user": {
                            "id": 1,
                            "full_name": "saka 1",
                            "user_name": "saka satu"
                        }
                    },
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "token is unvalid",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "token is expired",
                  }
        '401':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "unauthorized",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "invalid or expired jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get data point article",
                  }

  /points/{idUser}:
    get:
      tags:
        - Points
      description: Ketika user dan employee ingin melihat total point per user berdasar id user
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: idUser
          required: true
          schema:
            type: number
            example: 1
          description: user_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responsePoint'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get data point user",
                    "data": {
                        "data": [
                            {
                                "id": 1,
                                "value": "2.0",
                                "created_at": "2022-10-18T15:48:29.465Z",
                                "article": {
                                    "id": 2,
                                    "title": "testing"
                                },
                                "company": {
                                    "id": 2,
                                    "employee_name": "employee 1"
                                },
                                "user": {
                                    "id": 1,
                                    "full_name": "saka 1",
                                    "user_name": "saka satu"
                                }
                            },
                            {
                                "id": 2,
                                "value": "3.0",
                                "created_at": "2022-10-19T03:12:45.402Z",
                                "article": {
                                    "id": 1,
                                    "title": "testing"
                                },
                                "company": {
                                    "id": 2,
                                    "employee_name": "employee 1"
                                },
                                "user": {
                                    "id": 1,
                                    "full_name": "saka 1",
                                    "user_name": "saka satu"
                                }
                            },                            
                        ],
                        "total_point": 5
                    },
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "token is unvalid",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "token is expired",
                  }
        '401':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "unauthorized",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "invalid or expired jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get data point user",
                  }
  /points/users:
    get:
      tags:
        - Points
      description: Ketika user penjual melihat history negosiasi atas rumah yang dijual
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responsePoint'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get all data",
                    data: 
                    {
                      "id": 1,
                      "nego": "3 miliar",
                      "user": {
                        "id": 2,
                        "full_name": "Ardi Hakim",
                      }
                      },
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "invalid token",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "missing or malformed jwt",
                  }
                responseData3:
                  description: response failed 3
                  value: {
                    status: "error",
                    message: "failed id house not recognize",
                  }
        '401':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "unauthorized",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "invalid or expired jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get all data",
                  }
  /company:
    post:
      tags:
        - Company
      description: ketika employee registrasi di aplikasi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestCompany'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "employee_name": "employee 1",
                  "password": "employee1",
                  "phone_number": "0824-6743-1158",
                  "email": "employee1@gmail.com",
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "success to insert data",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to bind data, check your input",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "employeename must be filled",
                  }
                responseData3:
                  description: response failed 3
                  value: {
                    status: "error",
                    message: "invalid format email",
                  }
                responseData4:
                  description: response failed 4
                  value: {
                    status: "error",
                    message: "password must be filled",
                  }
                responseData5:
                  description: response failed 5
                  value: {
                    status: "error",
                    message: "phone number must be in numeric",
                  }
                responseData6:
                  description: response failed 6
                  value: {
                    status: "error",
                    message: "email already exist",
                  }
  /company/users:
    get:
      tags:
        - "Company"
      description: Bisa diaplikasikan ketika employee/company ingin melihat all users register
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUserSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                     "data": [
                        {
                            "id": 1,
                            "full_name": "saka 1",
                            "user_name": "saka satu",
                            "email": "saka1@gmail.com",
                            "phone_number": "082123",
                            "created_at": "2022-10-18T06:42:06.332Z"
                        },
                        {
                            "id": 2,
                            "full_name": "saka 2",
                            "user_name": "saka dua",
                            "email": "saka2@gmail.com",
                            "phone_number": "082123",
                            "created_at": "2022-10-18T06:42:23.359Z"
                        },
                        {
                            "id": 3,
                            "full_name": "saka 3",
                            "user_name": "sakatiga",
                            "email": "saka3@gmail.com",
                            "phone_number": "082123",
                            "created_at": "2022-10-19T07:46:12.419Z"
                        },
                        {
                            "id": 4,
                            "full_name": "saka 4",
                            "user_name": "saka empat",
                            "email": "saka4@gmail.com",
                            "phone_number": "082123",
                            "created_at": "2022-10-19T07:58:59.725Z"
                        }
                    ],
                    "message": "success to get data  all users",
                    "status": "success"
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "token is unvalid",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "missing token",
                  }
        '401':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "unauthorized",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "invalid or expired jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get data all users",
                  }
  /company/points:
    post:
      tags:
        - Company
      description: ketika company memberikan point untuk artikel
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestPoint'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "id_article": 1,
                  "value": 3.0,
                }
              userData2:
                description: "Example data  user 2"
                value: {
                  "id_article": 2,
                  "value": 4,
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "success to insert data",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "token is unvalid",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "failed to binding data",
                  }
        '401':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "unauthorized",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "invalid or expired jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to insert value",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    status: "error",
                    message: "failed to insert/record data",
                  }              

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  schemas:
    requestLogin:
      type: object
      properties:
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1

    responseUserSuccess:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }
    
    requestRegistrasi:
      type: object
      properties:
        "full_name":
          type: string
          minLength: 1
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
        "phone_number":
          type: string
          minLength: 1
    requestArticle:
      type: object
      properties:
        "title":
          type: string
          minLength: 1
        "content":
          type: string
          minLength: 1
    responseArticleSuccess:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }
    requestCompany:
      type: object
      properties:
        "employee_name":
          type: string
          minLength: 1
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
        "phone_number":
          type: string
          minLength: 1
    responseCompany:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }
    requestPoint:
      type: object
      properties:
        "id_article":
          type: number
          minLength: 1
        "value":
          type: number
          minLength: 1
    responsePoint:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }